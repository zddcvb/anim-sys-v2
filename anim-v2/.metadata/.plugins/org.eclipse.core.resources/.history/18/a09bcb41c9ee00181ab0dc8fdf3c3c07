package com.yanxi.anim.sys.controller;

import java.util.List;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageInfo;
import com.yanxi.anim.sys.pojo.AnimAssessment;
import com.yanxi.anim.sys.pojo.AssessmentQuery;
import com.yanxi.anim.sys.service.AnimDeptService;
import com.yanxi.anim.sys.service.AssessService;

@Controller
@RequestMapping("/assess")
public class AssessController {
	private AssessService assessService;

	@RequestMapping("/list")
	public ModelAndView list(ModelAndView mav) {
		List<AnimAssessment> assessments = assessService.findAll();
		mav.addObject("assessments", assessments);
		mav.setViewName("/assess/assess_list");
		return mav;
	}

	@RequestMapping("/view/{id}")
	public ModelAndView view(ModelAndView modelAndView, @PathVariable String id) {
		AnimAssessment assessment = assessService.findById(id);
		if (assessment != null) {
			modelAndView.addObject("assessment", assessment);
			modelAndView.setViewName("/assess/assess_view");
		}
		return modelAndView;
	}

	@RequestMapping("/add")
	public ModelAndView add(ModelAndView modelAndView) {
		modelAndView.setViewName("/assess/assess_edit");
		return modelAndView;
	}

	@RequestMapping("/add_data")
	public ModelAndView addData(ModelAndView modelAndView, AnimAssessment animAssessment) {
		int index = assessService.insert(animAssessment);
		if (index > 0) {
			modelAndView.setViewName("redirect:/assess/list");
		}
		return modelAndView;
	}

	@RequestMapping("/edit/{id}")
	public ModelAndView edit(ModelAndView modelAndView, @PathVariable String id) {
		AnimAssessment assessment = assessService.findById(id);
		modelAndView.addObject("assessment", assessment);
		modelAndView.setViewName("/assess/assess_edit");
		return modelAndView;
	}

	@RequestMapping("/delete/{id}")
	public ModelAndView deleteById(ModelAndView modelAndView, @PathVariable String id) {
		int index = assessService.deleteById(id);
		if (index > 0) {
			modelAndView.setViewName("redirect:/assess/list");
		}
		return modelAndView;
	}

	@RequestMapping("/deleteAll")
	public ModelAndView delete(ModelAndView modelAndView) {
		int index = assessService.deleteAll();
		if (index > 0) {
			modelAndView.setViewName("redirect:/assess/list");
		}
		return modelAndView;
	}

	public ModelAndView queryForList(ModelAndView modelAndView, AssessmentQuery query) {
		PageInfo<AnimAssessment> pageInfo = assessService.findAllByQuery(query);
		return modelAndView;

	}
}
